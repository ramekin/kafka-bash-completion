# vi: ft=bash
. ./helpers.sh

#INCLUDE

__my_init_completion() {
    COMPREPLY=()
    _get_comp_words_by_ref cur prev words cword
}

_kafka_console_consumer_complete() {

    local all_types='--bootstrap-server|--consumer-property|--consumer.config|--enable-systest-events|--formatter|--from-beginning|--group|--help|--isolation-level|--key-deserializer|--max-messages|--offset|--partition|--property|--skip-message-on-error|--timeout-ms|--topic|--value-deserializer|--version|--whitelist'
    local types_with_args='--bootstrap-server|--consumer-property|--consumer.config |--formatter|--group|--isolation-level|--key-deserializer|--max-messages|--offset|--partition|--property|--timeout-ms |--topic|--value-deserializer|--whitelist'

    local cur prev words cword candidates

    if declare -F _init_completions >/dev/null 2>&1; then
        _init_completion -n : || return    #Don't split on colon
    else
        __my_init_completion || return
    fi

    case "$prev" in

        '--bootstrap-server')
            candidates="${KAFKA_BOOTSTRAP_SERVER:-localhost:9092}"
            ;;

        '--consumer.config')
            compopt -o default # auto-complete with files
            ;;

        '--group')
            candidates="$(_get_consumer_groups)"
            ;;

        '--isolation-level')
            candidates='read_committed|read_uncommitted'
            ;;

        '--offset')
            candidates='earliest|latest'
            ;;

        '--property')
            compopt -o nospace # don't stick a space after the config=
            candidates='print.timestamp=|print.key=|print.value=|key.separator=|line.separator=|key.deserializer=|value.deserializer='
            ;;

        '--topic')
            candidates="$(_get_topics)"
            ;;

            #https://stackoverflow.com/a/13254908/591948
            @($types_with_args))
            # no suggestions - type needs an arg of some kind
            ;; 

        *)
            # it's a regular cmd option starting with -
            if [[ ${cur} == -* ]] ; then
                candidates="$all_types"
            fi
            ;;
        esac

        [[ ! -z "$candidates" ]] && COMPREPLY=($(IFS=$' \t\n|' compgen  -W "$candidates" -- ${cur}) )
        return 0
    }
#END_INCLUDE

complete -F _kafka_console_consumer_complete kafka-console-consumer.sh
